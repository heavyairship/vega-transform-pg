!function(e,r){"object"==typeof exports&&"undefined"!=typeof module?module.exports=r(require("vega")):"function"==typeof define&&define.amd?define(["vega"],r):e.VegaTransformPostgres=r(e.vega)}(this,function(e){var r=require("querystring"),t=require("http");function n(r){e.Transform.call(this,[],r)}return n.setHttpOptions=function(e){return e?(this._options=e,this):this._options},n.Definition={type:"postgres",metadata:{changes:!0,source:!0},params:[{name:"query",type:"string",required:!0}]},e.inherits(n,e.Transform).transform=function(o,i){try{var s=this;if(!n._options)throw Error("Vega Transform Postgres query missing. Assign it with setQuery.");return Promise.resolve(new Promise(function(e,i){var s=r.stringify({query:o.query});n._options["Content-Length"]=Buffer.byteLength(s);var u=t.request(n._options,function(r){var t="";r.on("data",function(e){t+=e}),r.on("end",function(){e(JSON.parse(t).rows)})});u.on("error",function(e){console.error("Error: "+e),i()}),u.write(s),u.end()})).then(function(r){r.forEach(e.ingest);var t=i.fork(i.NO_FIELDS&i.NO_SOURCE);return t.rem=s.value,s.value=t.add=t.source=r,t})}catch(e){return Promise.reject(e)}},n});
//# sourceMappingURL=vega-transform-pg.umd.js.map
