import{inherits as r,ingest as e,Transform as t}from"vega";var o=require("querystring"),n=require("http");function i(r){t.call(this,[],r)}i.setHttpOptions=function(r){return r?(this._options=r,this):this._options},i.Definition={type:"postgres",metadata:{changes:!0,source:!0},params:[{name:"query",type:"string",required:!0}]},r(i,t).transform=function(r,t){try{var s=this;if(!i._options)throw Error("Vega Transform Postgres query missing. Assign it with setQuery.");return Promise.resolve(new Promise(function(e,t){console.log(r.query);var s=o.stringify({query:r.query});i._options["Content-Length"]=Buffer.byteLength(s);var u=n.request(i._options,function(r){var t="";r.on("data",function(r){t+=r}),r.on("end",function(){e(JSON.parse(t).rows)})});u.on("error",function(r){console.error("Error: "+r),t()}),u.write(s),u.end()})).then(function(r){console.log(r),r.forEach(e);var o=t.fork(t.NO_FIELDS&t.NO_SOURCE);return o.rem=s.value,s.value=o.add=o.source=r,o})}catch(r){return Promise.reject(r)}};export default i;
//# sourceMappingURL=vega-transform-pg.mjs.map
